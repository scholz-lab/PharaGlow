# Testing pharaglow using different architectures and python versions
name: Test pharaglow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, dist-package ]
  pull_request:
    branches: [ master, dist-package ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest]
        os: [ubuntu-latest, macos-latest, windows-latest]
        #python-version: ["3.11"]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        # pypy3.8 Complained about OpenBlas missing dependency
        #python-version: ["3.8", "3.9", "3.10", "3.11", pypy3.8, pypy3.9]
        exclude:
          - os: macos-latest
            python-version: "3.8"

    steps:
      - name: Checkout pharaglow and LFS test data
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Debug action..
        run: |
          echo "runner os: ${{ runner.os }}"
          echo "matrix os: ${{ matrix.os }}"
      # Install system dependencies for imagecodecs
      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install libaec
      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libaec-dev
      - name: Compile requirements
        # The requirements.txt generation using pyproject.toml compilation
        # complains about invalid pyproject.toml but the validation-pyproject tool
        # is not showing any issues. (Omar 30.06.2023)
        # REF: https://github.com/jazzband/pip-tools/issues/1711
        # NOTE: This step overwrites any previously existing requirements.txt file
        # REF: https://medium.com/packagr/using-pip-compile-to-manage-dependencies-in-your-python-packages-8451b21a949e
        run: |
          python -m pip install pip-tools
          python -m piptools compile -o requirements.txt ${{ github.workspace }}/pyproject.toml --upgrade
      - name: Install dependencies Linux/macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run:
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install dependencies Windows
        if: runner.os == 'Windows'
        # Windows runner defaults to PowerShell (pwsh)
        # REF: https://dev.to/pwd9000/github-actions-all-the-shells-581h
        run:
          if (Test-Path -Path requirements.txt) { pip install -r requirements.txt }
      - name: Install ipykernel used by the testing script
        run: |
          python -m ipykernel install --user --name pharaglow-pip
      - name: Create pglow_batch_config JSON file
        run: >
          python ${{ github.workspace }}/notebooks/make_conf_file.py
          -d ${{ github.workspace }}
          -i data
          -o out_data
          -p AnalysisParameters_1x.json
          -t notebooks
          -n PharaGlowHPC.ipynb
          -c pglow_batch_config_github.json
      - name: Create output test data directory
        run: |
          mkdir out_data
          echo "[DEBUG] pglow_batch_cofig_github.json:"
          cat notebooks/pglow_batch_config_github.json
      - name: Run test notebook (papermill)
        # NOTE: Avoid power sheel bacticks ` for line continuation, use instead YAML folded style.
        # REF1: https://stackoverflow.com/questions/3235850/how-to-enter-a-multi-line-command
        # RANT: https://get-powershellblog.blogspot.com/2017/07/bye-bye-backtick-natural-line.html
        # REF2: https://stackoverflow.com/questions/59954185/github-action-split-long-command-into-multiple-lines
        run: >
          python ${{ github.workspace }}/notebooks/runPGlow_HPC.py -n 1 -s true 
          -k pharaglow-pip 
          ${{ github.workspace }}/notebooks/pglow_batch_config_github.json
